# 这个章节主要讲了几种sort 排序的算法

1. 冒泡排序：两个相邻的元素进行比较，大的放后面。每一次遍历未排好序的。所以两层循环，第一层i用来标记下，
            第二层通过len-i来遍历未排好序的，注意边界值问题。

2. 选择排序：首先遍历整个alist，对每一个遍历得值标记为minval，然后遍历这个值以后的，如果有比minval小
            的就和minval换位置。

3. 插入排序：遍历整个alist，然后从i=1开始将未排序的从后往前遍历，小于当前值就把enumerate(i)向后挪一
            个，直到不小于跳出来。并把enumerate(val)插到未排序的第一个。

4. 归并排序：利用分治的方法将alist循环分成两半直到len<=1,然后对左边和右边的分别从第一个值循环（直到左
            或者右到头为止），哪边的小就把哪个加到result里面，注意最后把剩下的都填到result里。

5. 快速排序：还是用了分治的思想，定义一个low和high还有一个pivot的标准值（第一个元素），循环当low>=high
            时停止，循环里high从后往前，low从前往后，如果high>pivot就往前遍历，同理low<pivot往后遍历
            否则把就换alist[high]和alist[low]的位置。直到low,high重合为一个值了就把pivot赋给low或high
            这时alist就变成了low,mid,high，此时递归（0，mid-1）(mid+1,len-1)即可
