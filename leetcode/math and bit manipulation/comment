# 这个章节主要讲了关于位运算和math的几种常见题型及方法

1. Majority Element: 题目要求找到数组中出现次数多的数（超过一半),用老方法就是数组排序，然后中间的数就是我们要的，
                     因为超过一半了。新方法就是遍历数组中的数，出现一次相同的加一个，下一个不相同减一个。

2. Palindrome Number: 回文数的判断。可以直接转化为str进行判断。或者利用数字特性，每次把数除以10，取10的余数然后
                      加上temp，然后temp每次乘10加余数。

3. Plus One: 数组加一返回数组。从后往前判断，如果是9，变0。否则直接加1返回。9进一的话在nums[0]insert一个1。

4. Power of Two: 求是否是2的倍数。笨办法直接循环到这个数，用2的n次方去判断。位方法，2的倍数有特性，和比他小一个的数
                 位与得到0。

5. Single Number: 在一堆有两个数的数组中找出一个单数的。老办法就是dict得出所有的数和对应的个数。然后遍历找到个数为1的。
                  这里用位方法，特性是两个相同的书异或得0，0异或任何数得任何数本身，所以直接全部异或即可。

6. Ugly Number: 判断是否是丑数，对每一个丑数循环，循环里面如果余这个丑数为0就一直除以这个丑数，最后得到1就说明是丑数。

7. Unique Binary Search Trees: 给一个数求二叉搜索树能生成几个。用动态规划，左子树乘以右子树即可。定义[1，1，2]然后
   n=3就是count[0]*count[2]+count[1]*count[1]+count[2]*count[0]。